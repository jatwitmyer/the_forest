{"ast":null,"code":"var _jsxFileName = \"/home/jess/Development/code/phase-5/the_forest/client/src/components/EventCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventCard({\n  currentEvent,\n  currentLocation,\n  event_id\n}) {\n  _s();\n  const [setup, setSetup] = useState(currentEvent.setup);\n  const [choices, setChoices] = useState(currentEvent.choices);\n  // console.log(\"setup\", setup)\n  // console.log(\"choices\", choices)\n\n  function handleChoice(choice) {\n    // console.log(choice)\n    if (choice.setup) {\n      setSetup(choice.setup);\n      setChoices(choice.choices);\n      console.log(currentLocation);\n    } else {\n      setSetup(choice.closer);\n      setChoices([]);\n      console.log(currentEvent);\n      // console.log(event_id)\n      console.log(currentLocation);\n      currentLocation.events.find(event => event.id === event_id).completed = true;\n      // currentLocation..completed = true\n    }\n  }\n\n  function renderChoices(choices) {\n    if (choices.length > 0) {\n      const choiceCards = choices.map(choice => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChoice(choice),\n          children: [\" \", choice.id, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", choice.selection]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 137\n        }, this)]\n      }, choice.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 49\n      }, this));\n      return choiceCards;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: setup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), renderChoices(choices)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(EventCard, \"AnTZWKlQb/9U8KiUwPG4Q9kUaiw=\");\n_c = EventCard;\nexport default EventCard;\nvar _c;\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EventCard","currentEvent","currentLocation","event_id","_s","setup","setSetup","choices","setChoices","handleChoice","choice","console","log","closer","events","find","event","id","completed","renderChoices","length","choiceCards","map","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","selection","className","_c","$RefreshReg$"],"sources":["/home/jess/Development/code/phase-5/the_forest/client/src/components/EventCard.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction EventCard( { currentEvent, currentLocation, event_id } ) {\n  const [setup, setSetup] = useState(currentEvent.setup)\n  const [choices, setChoices] = useState(currentEvent.choices)\n  // console.log(\"setup\", setup)\n  // console.log(\"choices\", choices)\n  \n  function handleChoice(choice) {\n    // console.log(choice)\n    if (choice.setup) {\n      setSetup(choice.setup)\n      setChoices(choice.choices)\n      console.log(currentLocation)\n    }\n    else {\n      setSetup(choice.closer)\n      setChoices([])\n      console.log(currentEvent)\n      // console.log(event_id)\n      console.log(currentLocation)\n      currentLocation.events.find(event => event.id === event_id).completed = true\n      // currentLocation..completed = true\n    }\n  }\n\n  function renderChoices(choices) {\n    if (choices.length > 0) {\n      const choiceCards = choices.map(choice => <div key={choice.id}><button onClick={() => handleChoice(choice)}> {choice.id} </button><span> {choice.selection}</span></div>)\n      return choiceCards\n    }\n  }\n  \n  return (\n    <div className=\"event-div\">\n      <p>{setup}</p>\n      {renderChoices(choices)}\n    </div>\n  )\n  }\n\n\nexport default EventCard\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAE;EAAEC,YAAY;EAAEC,eAAe;EAAEC;AAAS,CAAC,EAAG;EAAAC,EAAA;EAChE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACI,YAAY,CAACI,KAAK,CAAC;EACtD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAACI,YAAY,CAACM,OAAO,CAAC;EAC5D;EACA;;EAEA,SAASE,YAAYA,CAACC,MAAM,EAAE;IAC5B;IACA,IAAIA,MAAM,CAACL,KAAK,EAAE;MAChBC,QAAQ,CAACI,MAAM,CAACL,KAAK,CAAC;MACtBG,UAAU,CAACE,MAAM,CAACH,OAAO,CAAC;MAC1BI,OAAO,CAACC,GAAG,CAACV,eAAe,CAAC;IAC9B,CAAC,MACI;MACHI,QAAQ,CAACI,MAAM,CAACG,MAAM,CAAC;MACvBL,UAAU,CAAC,EAAE,CAAC;MACdG,OAAO,CAACC,GAAG,CAACX,YAAY,CAAC;MACzB;MACAU,OAAO,CAACC,GAAG,CAACV,eAAe,CAAC;MAC5BA,eAAe,CAACY,MAAM,CAACC,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKd,QAAQ,CAAC,CAACe,SAAS,GAAG,IAAI;MAC5E;IACF;EACF;;EAEA,SAASC,aAAaA,CAACZ,OAAO,EAAE;IAC9B,IAAIA,OAAO,CAACa,MAAM,GAAG,CAAC,EAAE;MACtB,MAAMC,WAAW,GAAGd,OAAO,CAACe,GAAG,CAACZ,MAAM,iBAAIX,OAAA;QAAAwB,QAAA,gBAAqBxB,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACC,MAAM,CAAE;UAAAa,QAAA,GAAC,GAAC,EAACb,MAAM,CAACO,EAAE,EAAC,GAAC;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAA7B,OAAA;UAAAwB,QAAA,GAAM,GAAC,EAACb,MAAM,CAACmB,SAAS;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAA9GlB,MAAM,CAACO,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0G,CAAC,CAAC;MACzK,OAAOP,WAAW;IACpB;EACF;EAEA,oBACEtB,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAP,QAAA,gBACxBxB,OAAA;MAAAwB,QAAA,EAAIlB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbT,aAAa,CAACZ,OAAO,CAAC;EAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAER;AAACxB,EAAA,CArCMJ,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAwClB,eAAeA,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}